{"version":3,"sources":["assets/js/index.js"],"names":["Geometry","position","x","y","width","height","color","velocityX","velocityY","gravity","randomGeometry","dt","ctx","fillStyle","beginPath","arc","Math","PI","closePath","fill","fillRect","getRandomArbitrary","min","max","random","randomColor","round","oldTime","canvasWidth","canvasHeight","geometryFigures","Array","canvas","document","getElementById","getContext","animate","ts","clearRect","forEach","e","update","render","requestAnimationFrame","devicePixelRatio","style","addEventListener","randRadius","figure","offsetX","offsetY","push"],"mappings":"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","file":"js.bddb40a0.js","sourceRoot":"..\\src","sourcesContent":["import '../css/styles.less';\r\n\r\nclass Geometry {\r\n    constructor({\r\n        position = {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        width = 0,\r\n        height = 0,\r\n        color = 0,\r\n        velocityX = 0,\r\n        velocityY = 0,\r\n        gravity = 0,\r\n        randomGeometry = 0.5\r\n    }) {\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.color = color;\r\n        this.velocityX = velocityX;\r\n        this.velocityY = velocityY;\r\n        this.gravity = gravity;\r\n        this.randomGeometry = randomGeometry;\r\n    }\r\n\r\n    update(dt) {\r\n        this.velocityY += this.gravity * dt;\r\n        this.position.x += this.velocityX * dt;\r\n        this.position.y += this.velocityY * dt;\r\n    }\r\n\r\n    render() {\r\n        ctx.fillStyle = this.color;\r\n        if (this.randomGeometry < 0.5) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.position.x, this.position.y, this.width, 0, 2 * Math.PI);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        } else {\r\n            ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n        }\r\n    }\r\n}\r\n\r\nconst getRandomArbitrary = (min, max) => {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nconst randomColor = () => {\r\n    return `rgb(${Math.round(Math.random()) * 255}, \r\n                ${Math.round(Math.random()) * 255}, \r\n                ${Math.round(Math.random()) * 255})`;\r\n}\r\n\r\nlet oldTime = 0;\r\nconst canvasWidth = 512;\r\nconst canvasHeight = 512;\r\nconst gravity = 100;\r\nconst geometryFigures = new Array;\r\n\r\nconst canvas = document.getElementById('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\ncanvas.width = canvasWidth * devicePixelRatio;\r\ncanvas.height = canvasHeight * devicePixelRatio;\r\ncanvas.style.width = `${canvasWidth}px`;\r\ncanvas.style.height = `${canvasHeight}px`;\r\n\r\nrequestAnimationFrame(animate);\r\n\r\nfunction animate(ts) {\r\n    ts /= 1000;\r\n    const dt = ts - oldTime;\r\n    oldTime = ts;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    geometryFigures.forEach(e => {\r\n        e.update(dt);\r\n        e.render(ctx);\r\n    })\r\n\r\n    requestAnimationFrame(animate);\r\n}\r\n\r\n\r\ncanvas.addEventListener('mousedown', e => {\r\n    const randRadius = getRandomArbitrary(10, 30);\r\n    const figure = new Geometry({\r\n        position: {\r\n            x: e.offsetX,\r\n            y: e.offsetY\r\n        },\r\n        width: randRadius,\r\n        height: randRadius,\r\n        color: randomColor(),\r\n        velocityX: getRandomArbitrary(-200, 200),\r\n        velocityY: getRandomArbitrary(-200, 200),\r\n        gravity: gravity,\r\n        randomGeometry: Math.random()\r\n    })\r\n\r\n    geometryFigures.push(figure);\r\n})"]}